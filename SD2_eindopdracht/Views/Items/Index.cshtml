@model IEnumerable<SD2_eindopdracht.Models.Item>

@{
    ViewData["Title"] = "Index";
}

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

<h1>Index</h1>

<p>
    @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
    {
        <a asp-action="Create">Create New</a>
    }
    <form asp-action="Search" asp-controller="Items" method="get">
        <div class="input-group">
            <input type="text" name="query" class="form-control" placeholder="Search for name, category, year or author">
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </form>

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">@Html.DisplayNameFor(model => model.Title)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParm"]">@Html.DisplayNameFor(model => model.Category)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorFirstNameSortParm"]">@Html.DisplayNameFor(model => model.Author.FirstName)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorLastNameSortParm"]">@Html.DisplayNameFor(model => model.Author.LastName)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["YearOfReleaseSortParm"]">@Html.DisplayNameFor(model => model.YearOfRelease)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StockSortParm"]">@Html.DisplayNameFor(model => model.Stock)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearOfRelease)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }

                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }

                    @if (User.Identity.IsAuthenticated && item.Stock > 0) //Only show ability to reservate item if item is in stock
                    {
                        <a asp-action="Reserve" asp-route-id="@item.Id">Reserve Item</a>
                    }
                </td>
        </tr>
}
    </tbody>
</table>
